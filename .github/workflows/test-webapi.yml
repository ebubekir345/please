name: Test WebAPI Pipeline

on:
  workflow_dispatch:
    inputs:
      artifactName:
        description: 'Name of the artifact'
        required: true
        type: string
      deployToInt:
        description: 'Deploy to Int'
        required: true
        type: boolean
        default: true
      deployToTest:
        description: 'Deploy to Test'
        required: true
        type: boolean
        default: true
      deployToTest01:
        description: 'Deploy to Test01'
        required: true
        type: boolean
        default: true
      deployToTest02:
        description: 'Deploy to Test02'
        required: true
        type: boolean
        default: true
      deployToAutomation:
        description: 'Deploy to Automation'
        required: true
        type: boolean
        default: true

jobs:
  build-and-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Variables
        id: variables
        uses: ./.github/actions/get-variables
        with:
          artifactName: 'Maestro.WebApi'
          awsRegion: 'eu-west-1'
          imageName: 'maestro-webapi'
          repositoryName: 'maestro-common-prod-webapi-repository'
          
      - name: Build WebApi
        uses: ./.github/actions/build-webapi
        with:
          dotnet-version: '8.0.x'
          project-path: './src/MyWebApi'
          
    outputs:
      artifactName: ${{ steps.variables.outputs.ARTIFACT_NAME }}
      awsRegion: ${{ steps.variables.outputs.AWS_REGION }}
      imageName: ${{ steps.variables.outputs.IMAGE_NAME }}
      repositoryName: ${{ steps.variables.outputs.REPOSITORY_NAME }}

  deploy-int:
    needs: build-and-setup
    if: ${{ inputs.deployToInt }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Int
        uses: ./.github/actions/deploy-webapi
        with:
          environment: 'int'
          artifactName: ${{ needs.build-and-setup.outputs.artifactName }}
          awsRegion: ${{ needs.build-and-setup.outputs.awsRegion }}
          imageName: ${{ needs.build-and-setup.outputs.imageName }}
          imageTag: 'latest' 
          repositoryName: ${{ needs.build-and-setup.outputs.repositoryName }}

  deploy-test:
    needs: build-and-setup
    if: ${{ inputs.deployToTest }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Test
        uses: ./.github/actions/deploy-webapi
        with:
          environment: 'test'
          artifactName: ${{ needs.build-and-setup.outputs.artifactName }}
          awsRegion: ${{ needs.build-and-setup.outputs.awsRegion }}
          imageName: ${{ needs.build-and-setup.outputs.imageName }}
          imageTag: 'latest' 
          repositoryName: ${{ needs.build-and-setup.outputs.repositoryName }}

  deploy-test01:
    needs: build-and-setup
    if: ${{ inputs.deployToTest01 }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Test01
        uses: ./.github/actions/deploy-webapi
        with:
          environment: 'test01'
          artifactName: ${{ needs.build-and-setup.outputs.artifactName }}
          awsRegion: ${{ needs.build-and-setup.outputs.awsRegion }}
          imageName: ${{ needs.build-and-setup.outputs.imageName }}
          imageTag: 'latest' 
          repositoryName: ${{ needs.build-and-setup.outputs.repositoryName }}

  deploy-test02:
    needs: build-and-setup
    if: ${{ inputs.deployToTest02 }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Test02
        uses: ./.github/actions/deploy-webapi
        with:
          environment: 'test02'
          artifactName: ${{ needs.build-and-setup.outputs.artifactName }}
          awsRegion: ${{ needs.build-and-setup.outputs.awsRegion }}
          imageName: ${{ needs.build-and-setup.outputs.imageName }}
          imageTag: 'latest' 
          repositoryName: ${{ needs.build-and-setup.outputs.repositoryName }}

  deploy-automation:
    needs: build-and-setup
    if: ${{ inputs.deployToAutomation }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Automation
        uses: ./.github/actions/deploy-webapi
        with:
          environment: 'automation'
          artifactName: ${{ needs.build-and-setup.outputs.artifactName }}
          awsRegion: ${{ needs.build-and-setup.outputs.awsRegion }}
          imageName: ${{ needs.build-and-setup.outputs.imageName }}
          imageTag: 'latest' 
          repositoryName: ${{ needs.build-and-setup.outputs.repositoryName }}
